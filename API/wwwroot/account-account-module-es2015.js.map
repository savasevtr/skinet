{"version":3,"sources":["./src/app/account/login/login.component.html","./src/app/account/register/register.component.html","./src/app/account/account-routing.module.ts","./src/app/account/account.module.ts","./src/app/account/login/login.component.scss","./src/app/account/login/login.component.ts","./src/app/account/register/register.component.scss","./src/app/account/register/register.component.ts"],"names":[],"mappings":"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","file":"account-account-module-es2015.js","sourcesContent":["export default \"<div class=\\\"d-flex justify-content-center mt-5\\\">\\n    <div class=\\\"col-4\\\">\\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n            <div class=\\\"text-center mb-4\\\">\\n                <h1 class=\\\"h3 mb-3 font-weight-normal\\\">Login</h1>\\n            </div>\\n\\n            <app-text-input formControlName=\\\"email\\\" [label]=\\\"'Email Address'\\\"></app-text-input>\\n            <app-text-input formControlName=\\\"password\\\" [label]=\\\"'Password'\\\" [type]=\\\"'password'\\\"></app-text-input>\\n\\n            <!-- <div class=\\\"form-label-group\\\">\\n                <input formControlName=\\\"email\\\" type=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" placeholder=\\\"Email address\\\" required=\\\"\\\"\\n                    autofocus=\\\"\\\">\\n                <label for=\\\"inputEmail\\\">Email address</label>\\n                <span class=\\\"text-danger\\\"\\n                    *ngIf=\\\"loginForm.get('email').invalid\\n                    && loginForm.get('email').touched\\n                    && loginForm.get('email').errors['required']\\\">\\n                    Email address is required\\n                </span>\\n                <span class=\\\"text-danger\\\"\\n                    *ngIf=\\\"loginForm.get('email').invalid\\n                    && loginForm.get('email').touched\\n                    && loginForm.get('email').errors['pattern']\\\">\\n                    Email address is not valid\\n                </span>\\n            </div>\\n\\n            <div class=\\\"form-label-group\\\">\\n                <input formControlName=\\\"password\\\" type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required=\\\"\\\">\\n                <label for=\\\"inputPassword\\\">Password</label>\\n                <span class=\\\"text-danger\\\"\\n                    *ngIf=\\\"loginForm.get('password').invalid\\n                    && loginForm.get('password').touched\\n                    && loginForm.get('password').errors['required']\\\">\\n                    Password is required\\n                </span>\\n            </div> -->\\n\\n            <button [disabled]=\\\"loginForm.invalid\\\" class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">Sign in</button>\\n        </form>\\n    </div>\\n</div>\"","export default \"<div class=\\\"d-flex justify-content-center mt-5\\\">\\n    <div class=\\\"col-4\\\">\\n        <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n            <div class=\\\"text-center mb-4\\\">\\n                <h1 class=\\\"h3 mb-3 font-weight-normal\\\">Register</h1>\\n            </div>\\n\\n            <app-text-input formControlName=\\\"displayName\\\" [label]=\\\"'Display Name'\\\"></app-text-input>\\n            <app-text-input formControlName=\\\"email\\\" [label]=\\\"'Email Address'\\\"></app-text-input>\\n            <app-text-input formControlName=\\\"password\\\" [label]=\\\"'Password'\\\" [type]=\\\"'password'\\\"></app-text-input>\\n\\n            <ul class=\\\"text-danger list-unstyled\\\" *ngIf=\\\"errors\\\">\\n                <li *ngFor=\\\"let error of errors\\\">\\n                    {{ error }}\\n                </li>\\n            </ul>\\n\\n            <button [disabled]=\\\"registerForm.invalid\\\" class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">Register</button>\\n        </form>\\n    </div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AccountRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountRoutingModule } from './account-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    SharedModule\n  ]\n})\nexport class AccountModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AccountService } from '../account.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  returnUrl: string;\n\n  constructor(\n    private accountService: AccountService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.returnUrl = this.activatedRoute.snapshot.queryParams.returnUrl || '/shop';\n    this.createLoginForm();\n  }\n\n  createLoginForm() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [\n        Validators.required,\n        Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')\n      ]),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  onSubmit() {\n    this.accountService.login(this.loginForm.value).subscribe(() => {\n      this.router.navigateByUrl(this.returnUrl);\n    }, error => {\n      console.log(error);\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AsyncValidatorFn, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { of, timer } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { AccountService } from '../account.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  errors: string[];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private accountService: AccountService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.formBuilder.group({\n      displayName: [null, [Validators.required]],\n      email: [\n        null, [\n          Validators.required,\n          Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')\n        ],\n        [this.validateEmailNotTaken()]\n      ],\n      password: [null, [Validators.required]]\n    });\n  }\n\n  onSubmit() {\n    this.accountService.register(this.registerForm.value).subscribe(response => {\n      this.router.navigateByUrl('/shop');\n    }, error => {\n      this.errors = error.errors;\n    });\n  }\n\n  validateEmailNotTaken(): AsyncValidatorFn {\n    return control => {\n      return timer(500).pipe(\n        switchMap(() => {\n          if (!control.value) {\n            return of(null);\n          }\n          return this.accountService.checkEmailExists(control.value).pipe(\n            map(res => {\n              return res ? { emailExists: true } : null;\n            })\n          );\n        })\n      );\n    };\n  }\n}\n"],"sourceRoot":"webpack:///"}